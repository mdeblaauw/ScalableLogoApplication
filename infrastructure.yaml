Resources:
  BucketImages:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          -
            AllowedOrigins:
              - http://127.0.0.1:51103
              - http://demo-logo-classification.s3-website-eu-west-1.amazonaws.com
            AllowedMethods:
              - PUT
            AllowedHeaders:
              - "*"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: lambdaSignURL
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              -
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - !Sub arn:aws:s3:::${BucketImages}/*
      
  TestLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code: ./lambda_functions/get_function/index.js
      FunctionName: logoApplicationGetter
      Handler: index.handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs8.10
      Environment: 
        Variables:
          REGION: eu-west-1
          uploadBucket: !Ref BucketImages

        